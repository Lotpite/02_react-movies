{"version":3,"sources":["components/search-panel/search-panel.js","components/header/navigation.js","services/FilmService.js","components/film-list/film-list.js","components/film-item/film-item.js","components/searched-list/searched-list.js","components/favorites/favorites.js","App.js","index.js"],"names":["SearchPanel","useState","query","setQuery","Form","className","FormControl","id","type","placeholder","onChange","e","target","value","to","Button","variant","onSubmit","document","getElementById","Navigation","Navbar","bg","expand","Container","fluid","Brand","Toggle","Collapse","Nav","style","maxHeight","navbarScroll","FilmService","_apiKey","_apiBase","_basePage","getResource","url","a","fetch","result","ok","Error","status","json","getFilmByID","res","_transcriptFilm","getPopular","page","results","map","item","getGenres","genres","getSearched","getDescription","getRelated","film","title","original_title","genre_ids","description","overview","poster_path","onLike","FilmList","films","setFilms","setGenres","setPage","newItemLoading","setNewItemLoading","newService","onGenresLoaded","useEffect","onRequest","onFilmListLoading","then","onListLoaded","getGenresList","items","arr","i","genre","forEach","gen","name","Badge","text","Col","Card","width","Img","src","alt","Body","onClick","localStorage","setItem","JSON","stringify","Toast","Header","addToFavorites","onlike","Row","renderFilms","size","disabled","withRouter","props","movie","setMovie","related","setRelated","filmService","onFilmLoaded","onRelatedLoaded","match","params","getRelatedFilms","renderSearched","getFilmsList","Favorites","renderFilm","removeItem","removeFavorites","Object","values","list","push","parse","App","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.8990a6a5.chunk.js","sourcesContent":["import { Form, FormControl, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nconst SearchPanel = () => {\r\n\r\n    const [query, setQuery] = useState();\r\n\r\n    function getQuery(e) {\r\n        setQuery(query => e.target.value)\r\n    }\r\n\r\n    function clearInputs() {\r\n        document.getElementById(\"search-form\").value = '';\r\n    }\r\n\r\n        return (\r\n            <Form className=\"d-flex\">\r\n                <FormControl\r\n                id=\"search-form\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                className=\"me-2\"\r\n                aria-label=\"Search\"\r\n                onChange={getQuery}\r\n                \r\n                />\r\n                <Link to={`/search_results/${query}`}>\r\n                    <Button variant=\"outline-light\"\r\n                    onSubmit={clearInputs}\r\n                    >Search</Button>\r\n                 </Link>\r\n            </Form>\r\n        )\r\n    }\r\n\r\nexport default SearchPanel;","import {Navbar, Nav, Container} from 'react-bootstrap';\r\nimport SearchPanel from '../search-panel/search-panel';\r\nimport {Link} from 'react-router-dom';\r\nimport './navigation.css';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n        <Container fluid>\r\n            <Navbar.Brand>Filmzzz</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n            <Navbar.Collapse id=\"navbarScroll\">\r\n            <Nav\r\n                className=\"me-auto my-2 my-lg-0\"\r\n                style={{ maxHeight: '100px' }}\r\n                navbarScroll\r\n            >\r\n                <Link  className=\"light\" to=\"/\">\r\n                    Popular\r\n                </Link>\r\n                <Link  className=\"light\" to=\"/favorites\">\r\n                    Favorites\r\n                </Link>\r\n            </Nav>\r\n            <SearchPanel/>\r\n            </Navbar.Collapse>\r\n        </Container>\r\n    </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navigation;\r\n","class FilmService {\r\n\r\n    // _apiKey = '052a7bfc73ba8f24b52cbf7c006da253';\r\n    _apiKey = '052a7bfc73ba8f24b52cbf7c006da253';\r\n    _apiBase = 'https://api.themoviedb.org/3/';\r\n    _basePage = 1;\r\n\r\n    \r\n    // function template to get resource from db\r\n    getResource = async (url) => {\r\n        let result = await fetch(url);\r\n\r\n        if (!result.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${result.status}`);\r\n        }\r\n\r\n        return await result.json();\r\n    }\r\n\r\n    getFilmByID = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}movie/${id}?api_key=${this._apiKey}`); //Request to DBі\r\n        return this._transcriptFilm(res);\r\n    }\r\n\r\n    getPopular = async (page = this._basePage) => {\r\n        const res = await this.getResource(`${this._apiBase}movie/popular?api_key=${this._apiKey}&language=en-US&page=${page}`); // required page number\r\n        return res.results.map(item => this._transcriptFilm(item));\r\n    }\r\n\r\n    getGenres = async() => {\r\n        const res = await this.getResource(`${this._apiBase}genre/movie/list?api_key=${this._apiKey}&language=en-US`);\r\n        return res.genres;\r\n    }\r\n\r\n    getSearched = async (query, page) => {\r\n        const res = await this.getResource(`${this._apiBase}search/movie?query=${query}&api_key=${this._apiKey}&page=${page}`);\r\n        return res.results.map(item => this._transcriptFilm(item));\r\n    }\r\n\r\n    getDescription = () => {\r\n        return this.getResource(`${this._apiBase}movie/{movie_id}?api_key=${this._apiKey}&language=en-US`); // required move_id\r\n    }\r\n\r\n    getRelated = async(id) => {\r\n        const res = await this.getResource(`${this._apiBase}movie/${id}/recommendations?api_key=${this._apiKey}&language=en-US&${this._basePage}`); // required page number\r\n        return res.results.map(item => this._transcriptFilm(item));\r\n    }\r\n\r\n    _transcriptFilm(film) {\r\n        return {\r\n            id: film.id,\r\n            title: film.original_title,\r\n            genre_ids: film.genre_ids,\r\n            description: film.overview,\r\n            poster_path: 'https://image.tmdb.org/t/p/w500' + film.poster_path,\r\n            onLike: false\r\n        }\r\n    }\r\n}\r\n\r\nexport default FilmService;\r\n","import {Container, Row, Col, Card, Button, Badge, Toast} from 'react-bootstrap';\r\nimport FilmService from '../../services/FilmService';\r\nimport { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './film-list.css';   \r\n\r\nconst FilmList = () => {\r\n\r\n    const [films, setFilms] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n\r\n    const [smShow, setSmShow] = useState(false);\r\n\r\n    const newService = new FilmService();\r\n\r\n    const onFilmListLoading = () => {\r\n        setNewItemLoading(onFilmListLoading => !onFilmListLoading)\r\n    }\r\n\r\n    const onGenresLoaded = (res) => {\r\n        setGenres(genres => res)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        onRequest();\r\n    }, [])\r\n\r\n    // load film list (request to server)\r\n    const onRequest = () => {\r\n        onFilmListLoading();\r\n        newService\r\n            .getPopular(page)\r\n            .then(onListLoaded)\r\n        getGenresList()\r\n    }\r\n\r\n    // write list to the state\r\n    const onListLoaded = (res) => {\r\n        setFilms(films => [...films, ...res])\r\n        setPage(page => page + 1)\r\n        setNewItemLoading(newItemLoading => false)\r\n    }\r\n\r\n    const getGenresList = () => {\r\n        newService\r\n        .getGenres()\r\n        .then(onGenresLoaded)\r\n    }\r\n    \r\n     function addToFavorites (id, item, i) { \r\n        //  item.onLike = !item.onLike\r\n        //  setFilms(film => films[i] === item ? item : film)\r\n        localStorage.setItem(id, JSON.stringify(item))\r\n\r\n        return (\r\n            <Toast>\r\n                <Toast.Header>\r\n                <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" />\r\n                <strong className=\"me-auto\">Bootstrap</strong>\r\n                <small>11 mins ago</small>\r\n                </Toast.Header>\r\n                <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\r\n            </Toast>\r\n        )\r\n     }\r\n     \r\n    function renderFilms(arr) {\r\n        // change img path\r\n        const items = arr.map((item, i) => {\r\n            // create badge for each id\r\n            const genre = item.genre_ids.map(id => {\r\n                // overwrite id as genre\r\n                genres.forEach((gen) => {\r\n                    if (id === gen.id) {\r\n                        id = gen.name\r\n                    }\r\n                })\r\n                return (\r\n                    <Badge bg=\"light\" text=\"dark\" key={id}> \r\n                        {id}\r\n                    </Badge>\r\n                )\r\n            })\r\n\r\n            \r\n            \r\n            \r\n            return (\r\n                <Col key={item.id}>\r\n                    \r\n                        <Card bg='light' text='dark' style={{ width: '14rem'}} className=\"cardList\"> \r\n                        <Link to={`/film/${item.id}`}>\r\n                            <Card.Img variant=\"top\" src={item.poster_path} alt={item.title}/>\r\n                        </Link>\r\n                            <Card.Body>\r\n                            <Badge bg=\"danger\" className=\"favor\" onClick={() => addToFavorites(item.id, item, i)}>{!item.onlike ? 'Add' : 'Remove'}</Badge>\r\n                                {genre}\r\n                                \r\n                            </Card.Body>\r\n                        </Card>\r\n                    <br />\r\n                </Col>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <Row>\r\n                {items}\r\n            </Row>\r\n        )\r\n    }\r\n       \r\n        let items = renderFilms(films);\r\n\r\n        return (\r\n            <Container className=\"justify-content-md-center\" >\r\n                    {items}\r\n                    <Button variant=\"dark\" size=\"lg\"\r\n                     disabled={newItemLoading}\r\n                     onClick={() => onRequest(page)}\r\n                     >show more</Button>\r\n            </Container>\r\n        )\r\n    }\r\n\r\nexport default FilmList;\r\n","import { useState, useEffect } from 'react';\r\nimport {Container, Row, Col, Card, Badge} from 'react-bootstrap';\r\nimport FilmService from '../../services/FilmService';\r\nimport { withRouter } from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\nimport './film-item.css'\r\n\r\n// required variables = img, title, genre, description, link for button to openv\r\n\r\nconst Film = (props) => {\r\n\r\n    const [movie, setMovie] = useState({});\r\n    const [related, setRelated] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n\r\n    const filmService = new FilmService();\r\n\r\n    const onFilmLoaded = (res) => {\r\n        setMovie(movie => res)\r\n    }\r\n\r\n    const onRelatedLoaded = (res) => {\r\n        setRelated(related => res)\r\n    }\r\n\r\n    useEffect (() => { \r\n            onChange()\r\n        },[props.id, movie]) //watching for id\r\n\r\n    const onChange = () => {\r\n        const {match: {params: {id}}} = props; // get id from filmlist (through router)\r\n        if (!id) {\r\n            return\r\n        }\r\n        filmService\r\n        .getFilmByID(id)\r\n        .then(onFilmLoaded) \r\n        getRelatedFilms(id)\r\n        getGenresList()\r\n    }\r\n\r\n    const getRelatedFilms = (id) => {\r\n            filmService\r\n            .getRelated(id)\r\n            .then(onRelatedLoaded)\r\n    }\r\n\r\n    const onGenresLoaded = (res) => {\r\n        setGenres(genres => res)\r\n    }\r\n\r\n    const getGenresList = () => {\r\n        filmService\r\n        .getGenres()\r\n        .then(onGenresLoaded)\r\n    } \r\n\r\n    function addToFavorites (id, item) { \r\n        localStorage.setItem(id, JSON.stringify(item))\r\n     }\r\n\r\n\r\n    function renderFilms(arr) {\r\n        // change img path\r\n        const items = arr.map((item, i) => {\r\n\r\n            // create badge for each id\r\n            const genre = item.genre_ids.map(id => {\r\n                // overwrite id as genre\r\n                genres.forEach((gen) => {\r\n                    if (id === gen.id) {\r\n                        id = gen.name\r\n                    }\r\n                })\r\n                return (\r\n                    <Badge bg=\"light\" text=\"dark\" key={id}> \r\n                        {id}\r\n                    </Badge>\r\n                )\r\n            })\r\n\r\n            return (\r\n                <Col key={item.id}>\r\n                    \r\n                        <Card bg='light' text='dark' style={{ width: '14rem'}} className=\"cardList\" onClick={() => onChange(item.id)}> \r\n                        <Link to={`/film/${item.id}`}>\r\n                            <Card.Img variant=\"top\" src={item.poster_path} alt={item.title}/>\r\n                        </Link>\r\n                            <Card.Body>\r\n                            <Badge bg=\"danger\" className=\"favor\" onClick={() => addToFavorites(item.id, item, i)}>{!item.onlike ? 'Add' : 'Remove'}</Badge>\r\n                                {genre}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    \r\n                    <br />\r\n                </Col>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <Row>\r\n                {items}\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    const {title, description, poster_path} = movie;\r\n\r\n    let items = renderFilms(related);\r\n\r\n    return (\r\n        <>        \r\n            <Container className=\"justify-content-md-center\">\r\n                <Col>\r\n                    <h3>{title}</h3>\r\n                    <div className=\"some\">\r\n                        <Card bg='light' text='dark' style={{ width: '14rem'}} className=\"cardList\"> \r\n                            <Card.Img variant=\"top\" src={'https://image.tmdb.org/t/p/w500' + poster_path} alt={title}/>\r\n                        </Card>\r\n                        <p>{description}</p>\r\n                    </div>            \r\n                    <br/><br/>\r\n                </Col>\r\n            </Container>\r\n\r\n            <Container className=\"justify-content-md-center\" >\r\n                <h2>Recommended Films</h2>\r\n                {items}\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Film);","import FilmService from '../../services/FilmService';\r\nimport {Container, Row, Col, Card, Badge} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst Searched = (props) => {\r\n\r\n    const [films, setFilms] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n    \r\n    const newService = new FilmService();\r\n\r\n    useEffect(() => {\r\n        \r\n        renderSearched();\r\n    }, [props.query]) //watching for query\r\n\r\n        const renderSearched = () => {\r\n            const {match: {params: {query}}} = props;\r\n            getGenresList()\r\n            getFilmsList(query)\r\n        }\r\n    \r\n    const onGenresLoaded = (res) => { //(res) is required to send params to function\r\n        setGenres(genres => res)\r\n    }\r\n\r\n    const onFilmLoaded = (res) => { //(res) is required to send params to function\r\n        setFilms(films => res)\r\n    }\r\n\r\n    const getFilmsList = (query) => {\r\n        newService.getSearched(query)\r\n        .then(onFilmLoaded) \r\n    }\r\n\r\n    const getGenresList = () => {\r\n        newService\r\n        .getGenres()\r\n        .then(onGenresLoaded)\r\n    } \r\n\r\n    function addToFavorites (id, item) { \r\n        localStorage.setItem(id, JSON.stringify(item))\r\n     }\r\n\r\n    function renderFilms(arr) {\r\n        const items = arr.map((item, i) => {\r\n\r\n            // create badge for each id\r\n            const genre = item.genre_ids.map(id => {\r\n                // overwrite id as genre\r\n                genres.forEach((gen) => {\r\n                    if (id === gen.id) {\r\n                        id = gen.name\r\n                    }\r\n                })\r\n                return (\r\n                    <Badge bg=\"light\" text=\"dark\" key={id}> \r\n                        {id}\r\n                    </Badge>\r\n                )\r\n            })\r\n\r\n            return (\r\n                <Col key={item.id}>\r\n                    \r\n                        <Card bg='light' text='dark' style={{ width: '14rem'}} className=\"cardList\"> \r\n                        <Link to={`/film/${item.id}`}>\r\n                            <Card.Img variant=\"top\" src={item.poster_path} alt={item.title}/>\r\n                        </Link>\r\n                            <Card.Body>\r\n                            <Badge bg=\"danger\" className=\"favor\" onClick={() => addToFavorites(item.id, item, i)}>{!item.onlike ? 'Add' : 'Remove'}</Badge>\r\n                                {genre}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    \r\n                    <br />\r\n                </Col>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <Row>\r\n                {items}\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    const items = renderFilms(films);\r\n\r\n    return (\r\n        <>\r\n            <h2>Search Results</h2>\r\n            <Container>\r\n                {items}\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default withRouter(Searched);","import { useState, useEffect } from 'react';\r\nimport {Container, Row, Col, Card, Button, Badge} from 'react-bootstrap';\r\nimport FilmService from '../../services/FilmService';\r\nimport { withRouter } from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Favorites = () => {\r\n\r\n    const [films, setFilms] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n\r\n    // console.log(Object.keys(localStorage))\r\n    const newService = new FilmService();\r\n\r\n    const onGenresLoaded = (res) => {\r\n        setGenres(genres => res)\r\n    }\r\n\r\n    const getGenresList = () => {\r\n        newService\r\n            .getGenres()\r\n            .then(onGenresLoaded)\r\n    } \r\n\r\n    function removeFavorites (id) { \r\n        localStorage.removeItem(id)\r\n        \r\n     }\r\n\r\n     useEffect(() => {\r\n\r\n        getGenresList()\r\n    }, [Object.values(localStorage)])\r\n\r\n    function renderFilm (film) {\r\n        const {title, poster_path, id, genre_ids} = film;\r\n        const genre = genre_ids.map(id => {\r\n            // overwrite id as genre\r\n            genres.forEach((gen) => {\r\n                if (id === gen.id) {\r\n                    id = gen.name\r\n                }\r\n            })\r\n            return (\r\n                <Badge bg=\"light\" text=\"dark\" key={id}> \r\n                    {id}\r\n                </Badge>\r\n            )\r\n        })\r\n\r\n        return (\r\n            \r\n                <Col key={id}>\r\n                    \r\n                        <Card bg='light' text='dark' style={{ width: '14rem'}} className=\"cardList\"> \r\n                        <Link to={`/film/${id}`}> \r\n                            <Card.Img variant=\"top\" src={poster_path} alt={title}/> \r\n                        </Link>\r\n                            <Card.Body>\r\n                            <Badge bg=\"danger\" className=\"favor\" onClick={() => removeFavorites(id, film)}>Remove</Badge>\r\n                                {genre}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    \r\n                    \r\n                    <br />\r\n                </Col>\r\n        )\r\n    }\r\n\r\n    let list = [];\r\n        Object.values(localStorage).forEach(value => {\r\n        if (value != 'undefined') {\r\n            list.push(renderFilm(JSON.parse(value)))\r\n        }\r\n    })\r\n    \r\n    return (\r\n        <Container className=\"justify-content-md-center\">\r\n            <Row>\r\n                {list}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Favorites;","import './App.css';\nimport Navigation from './components/header/navigation.js';\nimport FilmList from './components/film-list/film-list';\nimport Film from './components/film-item/film-item';\nimport Searched from './components/searched-list/searched-list';\nimport {Switch, Route} from 'react-router-dom';\nimport Favorites from './components/favorites/favorites';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation/>\n      <br />\n      <Switch>\n\n        <Route exact path='/'>\n          <FilmList/>\n        </Route>\n\n        <Route exact path='/film/:id'>\n          <Film/>\n        </Route>\n\n        <Route exact path='/search_results/:query'>\n          <Searched/>\n        </Route>\n\n        <Route exact path='/favorites'>\n          <Favorites/>\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App/>\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}